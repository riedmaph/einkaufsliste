{
    "swagger": "2.0",
    "info": {
        "title": "ELISA API",
        "description": "Definition of the internal API for ELISA.",
        "version": "1.0.0"
    },
    "schemes": [
        "http", "https"
    ],
    "basePath": "/api",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/users/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Register a new User.",
                "description": "",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Email-address and password for new user.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token for the user.",
                        "schema": {
                            "$ref": "#/definitions/Token"
                        }
                    },
                    "400": {
                        "description": "User already exists or password is invalid.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unhandeled error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Login as an existng User.",
                "description": "",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Email-address and password for new user.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token for the user.",
                        "schema": {
                            "$ref": "#/definitions/Token"
                        }
                    },
                    "401": {
                        "description": "Unknown user or bad password.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unhandeled error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/lists": {
            "get": {
                "tags": [
                    "Lists"
                ],
                "summary": "Get all lists for the user.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "lists": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/List"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed to authenticate token.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Lists"
                ],
                "summary": "Add a new List.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Name of the new list to be added.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ListValues"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "schema": {
                            "$ref": "#/definitions/ListID"
                        }
                    },
                    "403": {
                        "description": "Failed to authenticate token.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unhandeled error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/lists/{listid}": {
            "get": {
                "tags": [
                    "Lists"
                ],
                "summary": "Get details and all items of the specified list.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "listid",
                        "description": "ID of list to load details and items from.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "schema": {
                            "$ref": "#/definitions/ListWithItems"
                        }
                    },
                    "500": {
                        "description": "Unhandeled error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Lists"
                ],
                "summary": "Update an existing List.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "listid",
                        "description": "ID of List to be updated.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Values of list to be updated.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ListValues"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation."
                    },
                    "403": {
                        "description": "Failed to authenticate token.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unhandeled error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Lists"
                ],
                "summary": "Delete an existing List.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "listid",
                        "description": "ID of List to be deleted.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation."
                    },
                    "403": {
                        "description": "Failed to authenticate token.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "A list with the requested ID does not exists.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unhandeled error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/lists/{listid}/contributors": {
            "get": {
                "tags": [
                    "Shared Lists"
                ],
                "summary": "Gets all contributors of the list.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "listid",
                        "description": "ID of List to be shared.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "contributors": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Contributor"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed to authenticate token.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Shared Lists"
                ],
                "summary": "Share a list with another user.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "listid",
                        "description": "ID of List to be shared.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Email address of the user the list should be shared with.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Contributor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation."
                    },
                    "403": {
                        "description": "Failed to authenticate token.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Unkonwn email address.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unhandeled error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Shared Lists"
                ],
                "summary": "Remove a list contributor.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "listid",
                        "description": "ID of the shared list.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Email address of the user that should be removed.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Contributor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation."
                    },
                    "403": {
                        "description": "Failed to authenticate token.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "A list with the requested ID does not exists or the list is not shared with the specified user.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unhandeled error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/lists/{listid}/items": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Get all items of the specified list.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "listid",
                        "description": "ID of list to load items from.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Item"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed to authenticate token.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unhandeled error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Add a new item to a list.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "listid",
                        "description": "ID of list of item to be created.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Values of item to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ItemValues"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "schema": {
                            "$ref": "#/definitions/ItemID"
                        }
                    },
                    "403": {
                        "description": "Failed to authenticate token.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unhandeled error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/lists/{listid}/items/{itemid}": {
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Update an existing item.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "listid",
                        "description": "ID of list of item to be updated.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "itemid",
                        "description": "ID of item to be update.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Values of item to be updated.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ItemValuesWithList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation."
                    },
                    "403": {
                        "description": "Failed to authenticate token.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unhandeled error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Delete an existing Item.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "listid",
                        "description": "ID of list of the item to be deleted.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "itemid",
                        "description": "ID of item to be deleted.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation."
                    },
                    "403": {
                        "description": "Failed to authenticate token.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unhandeled error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Items"
                ],
                "summary": "Move an existing item in its list.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "listid",
                        "description": "ID of list of item to be moved.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "itemid",
                        "description": "ID of item to be moved.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Target position of item to be moved.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MoveItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation."
                    },
                    "400": {
                        "description": "Item does not exist.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Failed to authenticate token.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unhandeled error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/products/search": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Find products by their name non case sensitiv.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "description": "String to search for.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "products": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Product"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed to authenticate token.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/markets": {
            "get": {
                "tags": [
                    "Markets"
                ],
                "summary": "Find markets, located within a given radius around the provided position or by zip-code.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "longitude",
                        "description": "Longitude of the given position.",
                        "required": true,
                        "type": "number",
                        "format": "decimal"
                    },
                    {
                        "in": "query",
                        "name": "latitude",
                        "description": "Latitude of the given position (search by position).",
                        "required": true,
                        "type": "number",
                        "format": "decimal"
                    },
                    {
                        "in": "query",
                        "name": "max-distance",
                        "description": "Maximum distance (airline) between the given position and market in meters (search by position).",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "in": "query",
                        "name": "zip",
                        "description": "Zip-code to search markets within. (search by zip-code)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "markets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Market"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No search query.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Failed to authenticate token.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unhandeled error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/markets/{marketid}/offers": {
            "get": {
                "tags": [
                    "Offers"
                ],
                "summary": "Get all offers of the specified market.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "marketid",
                        "description": "ID of market to load offers from.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "offers": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Offer"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed to authenticate token.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unhandeled error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/markets/favourites": {
            "get": {
                "tags": [
                    "Markets"
                ],
                "summary": "Get all favourite markets for the user.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "markets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Market"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Failed to authenticate token.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/markets/favourites/{marketid}": {
            "post": {
                "tags": [
                    "Markets"
                ],
                "summary": "Add a new market to user's favourite markets.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "marketid",
                        "description": "ID of market to be removed.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation."
                    },
                    "403": {
                        "description": "Failed to authenticate token.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unhandeled error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Markets"
                ],
                "summary": "Remove a market from user's favourite markets.",
                "description": "",
                "parameters": [
                    {
                        "name": "x-access-token",
                        "in": "header",
                        "description": "JWT for user authorization.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "marketid",
                        "description": "ID of market to be removed.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation."
                    },
                    "403": {
                        "description": "Failed to authenticate token.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Unhandeled error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Email-address of the user."
                },
                "password": {
                    "type": "string",
                    "description": "Password of the user."
                }
            }
        },
        "Token": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string",
                    "description": "The signed JWT. (Contains the UUID for the user.)"
                }
            }
        },
        "ListValues": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of list."
                }
            }
        },
        "ListID": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Unique identifer of list."
                }
            }
        },
        "ListShort": {
            "allOf": [
                {
                    "$ref": "#/definitions/ListID"
                },
                {
                    "$ref": "#/definitions/ListValues"
                },
                {
                    "required": [
                        "count",
                        "shared"
                    ],
                    "properties": {
                        "count": {
                            "type": "integer",
                            "description": "Number of items in list."
                        },
                         "shared": {
                            "type": "boolean",
                            "description": "True iif number of contributors is greater than 0."
                        }
                    }
                }
            ]
        },
        "List": {
            "allOf": [
                {
                    "$ref": "#/definitions/ListShort"
                },
                {
                    "required": [
                        "completed",
                        "owner"
                    ],
                    "properties": {
                        "completed": {
                            "type": "integer",
                            "description": "Number of checked items in list."
                        },
                        "owner": {
                            "type": "string",
                            "description": "Null if the current user is the owner of the list, else the email address if the owner of the list."
                        }
                    }
                }
            ]
        },
        "ItemList": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Item"
            }
        },
        "ListWithItems": {
            "allOf": [
                {
                    "$ref": "#/definitions/ListShort"
                },
                {
                    "required": [
                        "items"
                    ],
                    "properties": {
                        "items": {
                            "$ref": "#/definitions/ItemList"
                        }
                    }
                }
            ]
        },
        "ItemValues": {
            "type": "object",
            "required": [
                "name",
                "checked",
                "amount",
                "unit"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of item."
                },
                "position": {
                    "type": "integer",
                    "description": "Zero-based position if item within its list."
                },
                "checked": {
                    "type": "boolean",
                    "description": "Defines if item is checked or not."
                },
                "amount": {
                    "type": "number",
                    "description": "Amount of item."
                },
                "unit": {
                    "type": "string",
                    "description": "Unit of item."
                }
            }
        },
        "ItemValuesWithList": {
            "allOf": [
                {
                    "required": [
                        "listid"
                    ],
                    "properties": {
                        "listid": {
                            "type": "integer",
                            "description": "ID of the list the item belongs to."
                        }
                    }
                },
                {
                    "$ref": "#/definitions/ItemValues"
                }
            ]
        },
        "ItemID": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Unique identifer of item."
                }
            }
        },
        "Item": {
            "allOf": [
                {
                    "$ref": "#/definitions/ItemID"
                },
                {
                    "$ref": "#/definitions/ItemValues"
                }
            ]
        },
        "Product": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of product."
                }
            }
        },
        "MoveItem": {
            "type": "object",
            "required": [
                "targetposition"
            ],
            "properties": {
                "targetposition": {
                    "type": "integer",
                    "description": "Target position of the moved item."
                }
            }
        },
        "Contributor": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Email address of a registered user."
                }
            }
        },
        "MarketID": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Unique identifer of market."
                }
            }
        },
        "MarketValues": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of market."
                },
                "latitude": {
                    "type": "number",
                    "format": "decimal",
                    "description": "Latitude of market."
                },
                "longitude": {
                    "type": "number",
                    "format": "decimal",
                    "description": "Longitude of market."
                },
                "street": {
                    "type": "string",
                    "description": "Street of market."
                },
                "zip": {
                    "type": "string",
                    "description": "Zip-Code of market."
                },
                "city": {
                    "type": "string",
                    "description": "City of market."
                },
                "distance": {
                    "type": "number",
                    "description": "Distance in meter (airline). Only present if search was by position."

                }
            }
        },
        "Market": {
            "allOf": [
                {
                    "$ref": "#/definitions/MarketID"
                },
                {
                    "$ref": "#/definitions/MarketValues"
                }
            ]
        },
        "Article": {
            "type": "object",
            "required": [
                "name",
                "brand"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of article."
                },
                "brand": {
                    "type": "string",
                    "description": "Brand of article."
                }
            }
        },
        "Offer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Unique identifer of offer."
                },
                "market": {
                    "type": "integer",
                    "description": "Unique identifer of market."
                },
                "offerPrice": {
                    "type": "number",
                    "format": "double",
                    "description": "Price of offer."
                },
                "discount": {
                    "type": "string",
                    "description": "Discount of offer in original format from crawling."
                },
                "offerFrom": {
                    "type": "string",
                    "description": "Startdate of offer."
                },
                "offerTo": {
                    "type": "string",
                    "description": "Enddate of offer."
                },
                "product": {
                    "$ref": "#/definitions/Article"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}